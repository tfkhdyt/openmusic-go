// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package router

import (
	album2 "github.com/tfkhdyt/openmusic-go/controller/album"
	auth2 "github.com/tfkhdyt/openmusic-go/controller/auth"
	collab2 "github.com/tfkhdyt/openmusic-go/controller/collab"
	playlist2 "github.com/tfkhdyt/openmusic-go/controller/playlist"
	playlistsong2 "github.com/tfkhdyt/openmusic-go/controller/playlistsong"
	playlistsongactivity2 "github.com/tfkhdyt/openmusic-go/controller/playlistsongactivity"
	song2 "github.com/tfkhdyt/openmusic-go/controller/song"
	user2 "github.com/tfkhdyt/openmusic-go/controller/user"
	"github.com/tfkhdyt/openmusic-go/service/album"
	"github.com/tfkhdyt/openmusic-go/service/auth"
	"github.com/tfkhdyt/openmusic-go/service/collab"
	"github.com/tfkhdyt/openmusic-go/service/playlist"
	"github.com/tfkhdyt/openmusic-go/service/playlistsong"
	"github.com/tfkhdyt/openmusic-go/service/playlistsongactivity"
	"github.com/tfkhdyt/openmusic-go/service/song"
	"github.com/tfkhdyt/openmusic-go/service/user"
	"github.com/tfkhdyt/openmusic-go/tokenize/token"
)

// Injectors from wire.go:

func InitializeRouter() *Router {
	service := album.InitializeService()
	songService := song.InitializeService()
	controller := album2.NewController(service, songService)
	songController := song2.NewController(songService)
	userService := user.InitializeService()
	userController := user2.NewController(userService)
	authService := auth.InitializeService()
	manager := token.InitializeManager()
	authController := auth2.NewController(authService, userService, manager)
	playlistService := playlist.InitializeService()
	playlistsongactivityService := playlistsongactivity.InitializeService()
	playlistController := playlist2.NewController(playlistService, playlistsongactivityService)
	playlistsongService := playlistsong.InitializeService()
	playlistsongController := playlistsong2.NewController(playlistsongService, playlistService, songService, playlistsongactivityService)
	playlistsongactivityController := playlistsongactivity2.NewController(playlistsongactivityService, playlistService)
	collabService := collab.InitializeService()
	collabController := collab2.NewController(collabService, playlistService, userService)
	router := NewRouter(controller, songController, userController, authController, playlistController, playlistsongController, playlistsongactivityController, collabController)
	return router
}
